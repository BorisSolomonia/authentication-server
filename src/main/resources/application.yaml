server:
  port: 8081
# eureka:
#   instance:
#     prefer-ip-address: true
#   client:
#     fetch-registry: false
#     register-with-eureka: false
#     serviceUrl:
#         defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}
spring:
  application:
    name: AUTHENTICATION-SERVER
  datasource:
    url: jdbc:postgresql://10.99.243.38:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

oauth:
#  ეს არის სერვერის მისამართი სადაც არის ავტორიზაციის სერვერი
  url: http://34.121.119.90:8080
#  ეს არის ავტორიზაციის სერვერის მისამართი სადაც არის ტოკენის api
  token-url: ${oauth.url}/oauth2/token
#  ეს არის ავტორიზაციის სერვერის მისამართი სადაც არის კლიენტის ინფორმაცია, ამით ხდება კლიენტის ვალიდაცია, ავტორიზაციის სერვერისთვის ამ შემთხვევაში კლიენტი არის ეს, აუთენთიფიკაციის სერვერი
  api-client-id: api-client-id
  api-client-secret: api123
#logging:
#  level:
#    org:
#      springframework: DEBUG

